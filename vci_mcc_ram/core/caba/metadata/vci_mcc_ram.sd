
# -*- python -*-

Module('caba:vci_mcc_ram_sls',
	classname = 'soclib::caba::VciMccRam',
	tmpl_parameters = [
	parameter.Module('vci_param',  default = 'caba:vci_param'),
	],
	header_files = ['../source/include/vci_mcc_ram.h',],
	implementation_files = ['../source/src/vci_mcc_ram.cpp',],
	ports = [
	Port('caba:vci_target', 'p_t_vci'),
	Port('caba:vci_initiator', 'p_i_vci'),
	Port('caba:bit_in', 'p_resetn', auto = 'resetn'),
	Port('caba:clock_in', 'p_clk', auto = 'clock'),
	],
	uses = [
		Uses('caba:base_module'),
		Uses('caba:generic_fifo'),
		Uses('caba:vci_target_fsm_nlock_tlb_sls', default_target = 'true', support_llsc = 'true'),
		Uses('common:mapping_table'),
		Uses('common:loader'),
		Uses('common:directory_sls'),
		Uses('common:phys_page_table_sls'),
		Uses('common:cc_id_table_sls'),
		Uses('caba:module_5_sls'),
		Uses('caba:module_6_sls'),
		Uses('caba:globals_sls'),
		Uses('caba:vci_mcc_ram_interface_sls'),
		],
	instance_parameters = [
	parameter.IntTab('t_ident'),
	parameter.IntTab('i_ident'),
	parameter.Module('mt', 'common:mapping_table', auto='env:mapping_table'),
	parameter.Int('nb_p'),
	parameter.Module('loader', 'common:loader', auto='env:loader'),
	],
	   extensions = [
	'dsx:addressable=t_ident',
	'dsx:get_ident=t_ident:p_t_vci',
	'dsx:get_ident=i_ident:p_i_vci',
	'dsx:mapping_type=memory',
   ],
)
